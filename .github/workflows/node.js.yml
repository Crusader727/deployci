name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v4.9
        
    - name: Build
      run: npm run build
      id: build 

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: start deployment
      uses: bobheadxi/deployments@v0.4.3
      id: deployment
      with:
        step: start
        token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
        env: release
        
    - name: Deploy
      uses: appleboy/scp-action@master
      id: deploy
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        passphrase: ${{ secrets.SERVER_PASSPHRAZE }}
        key: ${{ secrets.SERVER_KEY }}
        port: 22
        source: "build/*"
        target: "/var/www/html/${{ steps.branch-name.outputs.current_branch }}"

    - name: update deployment status
      uses: bobheadxi/deployments@v0.4.3
      if: always()
      with:
        step: finish
        token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: "http://${{ secrets.SERVER_HOST }}/${{ steps.branch-name.outputs.current_branch }}/build"
